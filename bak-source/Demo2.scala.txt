package spark_elasticsearch.SparkES

import org.apache.spark.SparkContext
import org.apache.spark.SparkContext._
import org.apache.spark.streaming.StreamingContext
import org.apache.spark.streaming.StreamingContext._
import org.apache.spark.SparkConf
import org.apache.spark.streaming.Duration

import org.elasticsearch.spark.streaming._

/**
  * Created by cao on 16-3-25.
  */
object Demo2{
  def main(args: Array[String]) {
    val conf = new SparkConf().setAppName("ESDemo1").setMaster("local[2]")
    conf.set("es.index.auto.create", "true")
    conf.set("es.nodes","192.168.3.115")
    conf.set("es.port","9200")

    val sc = new SparkContext(conf)
    val ssc = new StreamingContext(sc, new Duration(5 * 1000))

    val numbers = Map("one" -> 1, "two" -> 2, "three" -> 3)
    val airports = Map("arrival" -> "Otopeni", "SFO" -> "San Fran")

    val rdd = sc.makeRDD(Seq(numbers, airports))
    val microbatches = scala.collection.mutable.Queue(rdd)

    ssc.queueStream(microbatches).saveToEs("sparkguanwang/docs")

    ssc.start()
    ssc.awaitTermination()
  }
}